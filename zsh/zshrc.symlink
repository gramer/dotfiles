export SCOUT_DISABLE=1
typeset -g POWERLEVEL9K_INSTANT_PROMPT=off
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
source /usr/local/opt/powerlevel10k/powerlevel10k.zsh-theme

#!/bin/zsh
ZSH=$HOME/.oh-my-zsh

# env general config {{{
LANG="ko_KR.UTF-8"
LC_COLLATE="ko_KR.UTF-8"
LC_CTYPE="ko_KR.UTF-8"
LC_MESSAGES="ko_KR.UTF-8"
LC_MONETARY="ko_KR.UTF-8"
LC_NUMERIC="ko_KR.UTF-8"
LC_TIME="ko_KR.UTF-8"
# }}}

# env directories {{{
export BASE=${HOME}/Documents/ZenoHome
export PROGRAM_BASE=$BASE/program
export SERVICE_BASE=$BASE/service
export SCRIPTS_BASE=$BASE/scripts
export CONF_BASE=$BASE/conf
export LOGS_BASE=$BASE/logs
export DATA_BASE=$BASE/data
# }}}

# env path # {{{
export PATH="/usr/local/bin:/bin:/usr/sbin:/sbin:/usr/bin:/opt/X11/bin:$SCRIPTS_BASE:$PATH"
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
# export MANPATH="/usr/local/man:$MANPATH"
# }}}

# oh-my-zsh general config # {{{
export ZSH=$HOME/.oh-my-zsh
export HISTTIMEFORMAT="%d/%m/%y %T "
source $ZSH/oh-my-zsh.sh
# }}}

# zplug # {{{
source ~/.zplug/init.zsh

# jq-repl
zplug "reegnz/jq-zsh-plugin"

#zplug "plugins/"#helm", from:oh-my-zsh
#zplug "plugins/"systemadmin", from:oh-my-zsh
#zplug "plugins/"terraform", from:oh-my-zs
#zplug "plugins/git", from:oh-my-zsh
#zplug "plugins/golang", from:oh-my-zsh
#zplug "plugins/node", from:oh-my-zsh
#zplug "plugins/python", from:oh-my-zsh
#zplug "plugins/ruby", from:oh-my-zsh
zplug "plugins/docker", from:oh-my-zsh
zplug "plugins/autojump", from:oh-my-zsh
zplug "plugins/kubectl", from:oh-my-zsh
zplug "plugins/tmux", from:oh-my-zsh
zplug "plugins/vi-mode", from:oh-my-zsh
zplug "plugins/zsh-autosuggestions", from:oh-my-zsh
zplug "plugins/zsh_reload", from:oh-my-zsh

# Install plugins if there are plugins that have not been installed
zplug check || zplug install
# Then, source plugins and add commands to $PATH
zplug load --verbose
# }}}

# load all files from .shell/zshrc.d directory {{{
if [ -d $HOME/.zshrc.d ]; then
  for file in $HOME/.zshrc.d/*.zsh; do
    source ${file}
  done
fi
# }}}

# fuzzy finder {{{
[ -f $HOME/.fzf.zsh ] && source $HOME/.fzf.zsh
export FZF_DEFAULT_OPTS="--height 40% --reverse"
# }}}

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh

export PATH=$PATH:/usr/local/opt/go/libexec/bin:/usr/local/opt/nvm:$GOPATH/bin
export TMUX_TMPDIR=~/.tmux/tmp

# initialize tools {{{
# [ -f /usr/local/opt/autoenv/activate.sh ] && source /usr/local/opt/autoenv/activate.sh

# direnv
eval "$(direnv hook zsh)"

# fig
[ -s ~/.fig/fig.sh ] && source ~/.fig/fig.sh

# broot
source /Users/zeno.kim/.config/broot/launcher/bash/br

# navi
eval "$(navi widget zsh)"
# }}}

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
